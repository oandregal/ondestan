<!DOCTYPE html>
<html>
<head>
	<title>${project}</title>
	<meta charset="utf-8" />

	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<link rel="stylesheet" href="${request.static_url('ondestan:static/styles/leaflet.css')}" />
</head>
<body>
	<span tal:condition="user_id != None">
	  <label>Hello, ${user_id}</label> <label tal:condition="can_edit">Editor</label>
	  <a href="${request.application_url}/logout">Logout</a>
	</span>
	<div id="map" style="width: 600px; height: 400px"></div>

	<script src="${request.static_url('ondestan:static/lib/leaflet.js')}"></script>
	<script src="${request.static_url('ondestan:static/lib/jquery-1.8.2.min.js')}"></script>
	<script src="${request.static_url('ondestan:static/lib/leaflet.ajax.min.js')}"></script>
	<script>

		var map = L.map('map').setView([51.505, -0.09], 13);
		
		function load_cows() {
			new L.GeoJSON.AJAX("${request.application_url}/json/points.json",{
				pointToLayer: function (feature, latlng) { 
					var color = "green"; 
					var weight = 0; 
		            if (feature.properties.battery_level < 20.0) {
		            	color = "red";
		            } else {
			            if (feature.properties.battery_level < 50.0) {
			            	color = "yellow";
			            }
		            }
		            if (feature.properties.outside) {
		            	weight = 5;
		            }
	                return new L.CircleMarker(latlng, {
	                    radius: 8,
	                    fillColor: color,
	                    color: "black",
	                    weight: weight,
	                    opacity: 1,
	                    fillOpacity: 1
	                });
	            },
	            onEachFeature: function (feature, layer) {
	                layer.bindPopup(feature.properties.popup);
		        }
			}).addTo(map);
		}

		new L.GeoJSON.AJAX("${request.application_url}/json/polygons.json",{
            onEachFeature: function (feature, layer) {
                layer.bindPopup(feature.properties.popup);
	        },
	        middleware:function(data){
	            load_cows();
	            return data;
	        }
		}).addTo(map);

		L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			maxZoom: 18,
			attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>'
		}).addTo(map);

	</script>
</body>
</html>
